name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tesla-usb-tool
            asset_name: tesla-usb-tool-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tesla-usb-tool.exe
            asset_name: tesla-usb-tool-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tesla-usb-tool
            asset_name: tesla-usb-tool-macos-x86_64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Run tests
      run: cargo test --release --target ${{ matrix.target }}

    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: ${{ github.ref_name }}
        releaseName: 'Tesla USB Tool v${{ github.ref_name }}'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        includeUpdaterJson: true

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: |
          target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          src-tauri/target/${{ matrix.target }}/release/bundle/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}